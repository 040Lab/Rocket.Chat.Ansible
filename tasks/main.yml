---
# tasks/main.yml: Main tasks for RocketChat.Ansible

  - include_vars: "{{ ansible_distribution }}.yml"

  - include: repo_RedHat.yml
    when: ansible_os_family == "RedHat"

  - include: mongodb.yml
    when: rocket_chat_include_mongodb
    tags: mongodb

  - name: Ensure Rocket.Chat dependencies are installed
    yum: name={{ item }} state=present
    with_items: "{{ rocket_chat_dep_packages }}"
    when: ansible_os_family == "RedHat"

  - name: Ensure Rocket.Chat dependencies are installed
    apt: name={{ item }} state=present cache_valid_time=3600
    with_items: "{{ rocket_chat_dep_packages }}"
    when: ansible_os_family == "Debian"

  - name: Ensure link /bin/node -> /bin/nodejs exists
    file:
      src: /bin/node
      dest: /bin/nodejs
      state: link
    when: ansible_os_family == "RedHat"

  - name: Ensure Nave & PM2 (NodeJS) are installed
    npm: name={{ item }} global=yes
    with_items:
      - nave
      - pm2

  - name: Register running processes
    shell: 'ps aux'
    register: rocket_chat_running_processes
    changed_when: False

  - name: Ensure PM2 is running
    shell: 'pm2 startup systemd'
    when: rocket_chat_running_processes.stdout.find('PM2') == -1
    register: pm2_startup

  - name: Use the 0.10 NodeJS environment via Nave
    shell: nave usemain 0.10
             creates=/root/.nave/installed

  - name: "Configure /etc/hosts"
    lineinfile:
      dest: /etc/hosts
      line:  "127.0.0.1    {{ ansible_fqdn }}    {{ ansible_hostname }}"
      regexp: '^127.0.0.1'

  - name: Ensure Rocket.Chat log directory exists
    file: name=/var/log/rocket.chat state=directory
    tags: build

  - name: Check to see if this is the initial deployment
    stat: path=/var/log/rocket.chat/app-0.log
    register: rocket_chat_deploy_state
    tags: build

  - name: Fetch the Rocket.Chat binary tarball
    get_url:
      url: "{{ rocket_chat_tarball_remote }}"
      sha256sum: "{{ rocket_chat_tarball_sha256sum }}"
      dest: /root

  - name: Ensure the Rocket.Chat application path exists
    file:
      path: "{{ rocket_chat_application_path }}"
      state: directory

  - name: Unpack the Rocket.Chat binary tarball
    unarchive:
      copy: no
      src: /root/rocket.chat-{{ rocket_chat_version }}.tgz
      dest: "{{ rocket_chat_application_path }}"
      creates: "{{ rocket_chat_application_path }}/bundle"
      
  - name: Install Rocket.Chat via NPM
    npm:
      state: present
      path: "{{ rocket_chat_application_path }}/bundle/programs/server"
    tags: build

  - name: Ensure the Rocket.Chat configuration is present
    template:
      src: pm2-rocket-chat.json.j2
      dest: /var/www/rocket.chat/pm2-rocket-chat.json
    tags: build

  - name: Register Rocket.Chat service status
    shell: pm2 show rocket.chat
    ignore_errors: True
    changed_when: False
    register: rocketchat_service_status

  - name: Ensure Rocket.Chat is running via PM2
    shell: pm2 start pm2-rocket-chat.json --watch
    args:
      chdir: /var/www/rocket.chat
    when: rocketchat_service_status.stdout.find('online') == -1

  - include: nginx.yml
    when: rocket_chat_include_nginx
    tags: nginx
