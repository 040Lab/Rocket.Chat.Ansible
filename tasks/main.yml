---
# tasks/main.yml: Main tasks for RocketChat.Ansible

  - include_vars: "{{ ansible_distribution }}.yml"
    tags: vars

  - include: repo_RedHat.yml
    when: ansible_os_family == "RedHat"
    tags: repo

  - include: mongodb.yml
    when: rocket_chat_include_mongodb
    tags: mongodb

  - name: Ensure the Rocket.Chat service group is present
    group:
      name: "{{ rocket_chat_service_group }}"
      state: present
      system: True

  - name: Ensure the Rocket.Chat service user is present
    user:
      comment: Rocket.Chat Service User
      name: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_group }}"
      home: "{{ rocket_chat_application_path }}"
      createhome: True
      shell: /bin/false
      state: present
      system: True

  - name: Ensure Rocket.Chat dependencies are installed
    yum: name={{ item }} state=present
    with_items: "{{ rocket_chat_dep_packages }}"
    when: ansible_os_family == "RedHat"

  - name: Ensure Rocket.Chat dependencies are installed
    apt: name={{ item }} state=present cache_valid_time=3600
    with_items: "{{ rocket_chat_dep_packages }}"
    when: ansible_os_family == "Debian"

  - name: Ensure link /bin/node -> /bin/nodejs exists
    file:
      src: /bin/node
      dest: /bin/nodejs
      state: link
    when: ansible_os_family == "RedHat"

  - name: Ensure Nave (NodeJS) is installed
    npm: name=nave global=yes

  - name: Ensure Forever (NodeJS) is installed
    npm: name=forever global=yes
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Check to see if Nave has installed the required 'node' binary
    stat:
      path: /usr/local/bin/node
    register: nave_node_bin

  - name: Register the NodeJS version currently in use
    shell: >-
      {% if nave_node_bin.stat.exists %}
      PATH=/usr/local/bin:$PATH
      node --version
      {% else %}
      {{ rocket_chat_node_initial_binary }} --version
      {% endif %}
    changed_when: False
    register: node_version

  - name: Use the 0.10.40 NodeJS environment via Nave
    shell: nave usemain 0.10.40
    when: node_version.stdout != "v0.10.40"

  - name: "Configure /etc/hosts"
    lineinfile:
      dest: /etc/hosts
      line:  "127.0.0.1    {{ ansible_fqdn }}    {{ ansible_hostname }}"
      regexp: '^127.0.0.1'

  - name: Fetch the Rocket.Chat binary tarball
    get_url:
      url: "{{ rocket_chat_tarball_remote }}"
      sha256sum: "{{ rocket_chat_tarball_sha256sum }}"
      dest: "{{ rocket_chat_application_path }}"
      timeout: "{{ rocket_chat_tarball_fetch_timeout }}"
    become: True
    become_user: "{{ rocket_chat_service_user }}"

  - name: Unpack the Rocket.Chat binary tarball
    unarchive:
      copy: False
      src: "{{ rocket_chat_application_path }}/rocket.chat-{{ rocket_chat_version }}.tgz"
      dest: "{{ rocket_chat_application_path }}"
      creates: "{{ rocket_chat_application_path }}/bundle"
    become: True
    become_user: "{{ rocket_chat_service_user }}"
    tags: build
      
  - name: Install Rocket.Chat via NPM
    npm:
      state: present
      path: "{{ rocket_chat_application_path }}/bundle/programs/server"
    become: True
    become_user: "{{ rocket_chat_service_user }}"
    tags: build

  - name: Check to see if the Rocket.Chat log file is present
    stat: path=/var/log/rocketchat.log
    register: rocket_chat_log_file_state
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Ensure the Rocket.Chat log file is present
    file:
      path: /var/log/rocketchat.log
      state: touch
      owner: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_group }}"
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")
          and not rocket_chat_log_file_state.stat.exists

  - name: Check to see if the Rocket.Chat pid file is present
    stat: path=/var/run/rocketchat.pid
    register: rocket_chat_pid_file_state
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")

  - name: Ensure the Rocket.Chat pid file is present
    file:
      path: /var/run/rocketchat.pid
      state: touch
      owner: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_group }}"
    when: (ansible_distribution == "Ubuntu")
          and (ansible_distribution_major_version == "14")
          and not rocket_chat_pid_file_state.stat.exists

  - name: Ensure the Rocket.Chat application data permissions are correct
    file:
      path: "{{ rocket_chat_application_path }}"
      state: directory
      owner: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_user }}"
      recurse: True
    tags: build

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
    tags: service

  - name: Deploy the Rocket.Chat service file
    template:
      src: "{{ rocket_chat_service_template.src }}"
      dest: "{{ rocket_chat_service_template.dest }}"
    notify: Update the Rocket.Chat service configuration
    tags: service

  - meta: flush_handlers

  - name: Ensure the MongoDB replSets have been initiated
    shell: >-
      mongo --eval 'rs.initiate()' &&
      touch .mongo_rs_initialised
    become: yes
    become_user: mongodb
    args:
      chdir: /var/lib/mongodb
      creates: /var/lib/mongodb/.mongo_rs_initialised
    when: rocket_chat_include_mongodb

  - name: Ensure the Rocket.Chat service is running/enabled
    service: name=rocketchat state=started enabled=True
    tags: service
  
  - include: nginx.yml
    when: rocket_chat_include_nginx
    tags: nginx
